:set encoding=utf-8
:set bs=2
:set tabstop=4
:set shiftwidth=4
:filetype on
:syntax on
:set number
:set autoindent
:set smartindent
:set cindent
" turn hybrid line numbers on
:set number relativenumber
:set nu rnu

" for js files
autocmd BufRead,BufNewFile *.js,*.jsx,*.ts,*.tsx set shiftwidth=2 tabstop=2 expandtab

:let mapleader = " "

" CTRL-C to copy (visual mode)
vmap <C-c> y
" CTRL-X to cut (visual mode)
vmap <C-x> x
" CTRL-V to paste (insert mode)
imap <C-v> <esc>P

nmap :ycm :YcmCompleter

" YCM preferences
let g:ycm_python_interpreter_path = '/usr/local/bin/python3'
let g:ycm_python_sys_path = ['', '/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python37.zip', '/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7', '/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload', '/usr/local/lib/python3.7/site-packages', '/usr/local/Cellar/protobuf/3.7.1/libexec/lib/python3.7/site-packages']
let g:ycm_extra_conf_vim_data = ['g:ycm_python_interpreter_path', 'g:ycm_python_sys_path']
let g:ycm_global_ycm_extra_conf = '~/global_extra_conf.py'

" Close the buffer window
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Needed for markdown
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

" Sort lines within VIM
Bundle 'christoomey/vim-sort-motion'
" Title Case text
Bundle 'christoomey/vim-titlecase'

" Lookup links from google
Bundle 'mattn/webapi-vim'
Bundle 'christoomey/vim-quicklink'

" automatically open quickfix window when AsyncRun command is executed
Plugin 'skywind3000/asyncrun.vim'

" FZF integration
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'

" Ale, linting
Plugin 'dense-analysis/ale'

Plugin 'Valloric/YouCompleteMe'

call vundle#end()            " required
filetype plugin indent on    " required

" Ale settings
" fix files on save
let g:ale_fix_on_save = 1

" lint after 1000ms after changes are made both on insert mode and normal mode
let g:ale_lint_on_text_changed = 'always'
let g:ale_lint_delay = 1000

" use nice symbols for errors and warnings
let g:ale_sign_error = '✗\ '
let g:ale_sign_warning = '⚠\ '

" fixer configurations
let g:ale_fixers = { '*': ['remove_trailing_lines', 'trim_whitespace'], }

let g:titlecase_map_keys = 0
nmap <leader>gt <Plug>Titlecase
vmap <leader>gt <Plug>Titlecase
nmap <leader>gT <Plug>TitlecaseLine


" set the quickfix window 6 lines height.
let g:asyncrun_open = 6

" ring the bell to notify you job finished
let g:asyncrun_bell = 1

" F10 to toggle quickfix window
nnoremap <F10> :call asyncrun#quickfix_toggle(6)<cr>

" Run cmake asynchronously in a build folder, and save all files before running
autocmd FileType cpp,cu nnoremap :cmake :AsyncRun -strip -cwd=<root> -save=2 mkdir -p build && cd build && cmake .. && cmake --build .<cr>
